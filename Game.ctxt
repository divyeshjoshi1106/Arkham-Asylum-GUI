#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ This\ is\ the\ main\ class\ of\ the\ "Joker's\ Great\ Escape"\ game.\ This\ is\ a\ very\ interesting\ game\r\n\ which\ envolves\ the\ escape\ of\ the\ joker\ from\ an\ asylum\ in\ gotham\ city\ called\ "The\ Arkham\ Asylum"\r\n\ The\ game\ has\ items\ that\ will\ help\ you\ escape\ from\ the\ Asylum\ but\ remember,\ when\ you\ are\ choosing\r\n\ the\ items,\ choose\ wisely\ because\ you\ are\ only\ allowed\ to\ carry\ around\ max\ 3\ items\ and\ having\r\n\ the\ suitable\ three\ items\ is\ your\ winning\ condition\ in\ this\ game\r\n\ \r\n\ \ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\r\n\ \ method.\r\n\ \r\n\ \ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ \ rooms,\ creates\ the\ parser\ and\ starts\ the\ game.\ \ It\ also\ evaluates\ and\r\n\ \ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\ \ \r\n\ \ \r\n\ \r\n\ @author\ \ Divyesh\ Joshi\ and\ Hussam\ Kayed\r\n\ @version\ \ June\ 2020\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment10.params=
comment10.target=java.lang.String\ winConditionCheck()
comment10.text=\r\n\ Method\ winConditionCheck\r\n\ checks\ if\ we\ have\ necessary\ items\ to\ win\ or\ not,\ if\ yes\ player\ wins\ the\ game\ if\ not\ ,\ lost\r\n
comment11.params=command
comment11.target=java.lang.String\ pickItem(Command)
comment11.text=\r\n\ Method\ pickItem\ try\ to\ pick\ up\ an\ item\ from\ the\ room\ to\ player's\ inventory\r\n\r\n\ @param\ command\ Command\ give\ us\ the\ item\ we\ need\ to\ pick\ up\r\n
comment12.params=command
comment12.target=java.lang.String\ dropItem(Command)
comment12.text=\r\n\ Method\ dropItem\ try\ to\ drop\ an\ item\ from\ the\ player's\ inventory\ to\ the\ room\ \r\n\r\n\ @param\ command\ Command\ give\ us\ the\ item\ we\ need\ to\ drop\r\n
comment13.params=
comment13.target=java.lang.String\ playerInventory()
comment13.text=\r\n\ Method\ playerInventory\r\n\ prints\ the\ items\ found\ in\ player's\ inventory\r\n
comment14.params=command
comment14.target=java.lang.String\ back(Command)
comment14.text=\r\n\ Method\ back\ Take\ the\ player\ to\ it's\ previous\ state\ of\ room\ and\ item\r\n\r\n\ @param\ command\ A\ parameter\r\n
comment15.params=command
comment15.target=java.lang.String\ quit(Command)
comment15.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment2.params=
comment2.target=void\ createRooms()
comment2.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n
comment3.params=
comment3.target=java.lang.String\ getCurrentRoomDescription()
comment3.text=\r\n\ Method\ getter\ for\ currents\ rooms\ description\r\n\r\n\ @return\ returns\ a\ string\ which\ contains\ current\ room's\ description\r\n
comment4.params=
comment4.target=java.util.ArrayList\ getCurrentRoomItems()
comment4.text=\r\n\ Method\ getCurrentRoomItems\r\n\r\n\ @return\ an\ arraylist\ containing\ items\ in\ current\ room\r\n
comment5.params=
comment5.target=java.util.ArrayList\ getInventory()
comment5.text=\r\n\ Method\ getInventory\r\n\r\n\ @return\ an\ arraylist\ containing\ items\ in\ player's\ inventory\r\n
comment6.params=
comment6.target=java.lang.String\ getCurrentImage()
comment6.text=\r\n\ Method\ getCurrentImage\r\n\r\n\ @return\ returns\ name\ of\ the\ image\ for\ current\ room\r\n
comment7.params=command
comment7.target=java.lang.String\ processCommand(Command)
comment7.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment8.params=
comment8.target=java.lang.String[]\ printHelp()
comment8.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
comment9.params=command
comment9.target=java.lang.String\ goRoom(Command)
comment9.text=\ \r\n\ Try\ to\ in\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n
numComments=16
